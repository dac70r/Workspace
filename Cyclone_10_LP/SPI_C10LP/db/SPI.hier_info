|SPI
clk => clk.IN1
rst_n => rst_n.IN1
sclk => sclk.IN1
ss => ss.IN1
mosi => mosi.IN1
miso <= SPI_module:my_spi_module.miso
rx_data[0] <= SPI_module:my_spi_module.rx_data
rx_data[1] <= SPI_module:my_spi_module.rx_data
rx_data[2] <= SPI_module:my_spi_module.rx_data
rx_data[3] <= SPI_module:my_spi_module.rx_data
rx_data[4] <= SPI_module:my_spi_module.rx_data
rx_data[5] <= SPI_module:my_spi_module.rx_data
rx_data[6] <= SPI_module:my_spi_module.rx_data
rx_data[7] <= SPI_module:my_spi_module.rx_data
debug_bit_count[0] <= SPI_module:my_spi_module.bit_count
debug_bit_count[1] <= SPI_module:my_spi_module.bit_count
debug_bit_count[2] <= SPI_module:my_spi_module.bit_count
debug_byte_count[0] <= SPI_module:my_spi_module.byte_count
debug_byte_count[1] <= SPI_module:my_spi_module.byte_count
debug_byte_count[2] <= SPI_module:my_spi_module.byte_count
byte_received <= SPI_module:my_spi_module.byte_received
data_transaction_complete <= SPI_module:my_spi_module.data_transaction_complete
led <= Blinky:uut.led
led1 <= c1.DB_MAX_OUTPUT_PORT_TYPE
led2 <= clock:my_clock.c2
led3 <= clock:my_clock.c3
debug_ss <= ss.DB_MAX_OUTPUT_PORT_TYPE


|SPI|clock:my_clock
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk
c3 <= altpll:altpll_component.clk


|SPI|clock:my_clock|altpll:altpll_component
inclk[0] => clock_altpll:auto_generated.inclk[0]
inclk[1] => clock_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|SPI|clock:my_clock|altpll:altpll_component|clock_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|SPI|Blinky:uut
clk => led_output.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
led <= led_output.DB_MAX_OUTPUT_PORT_TYPE


|SPI|SPI_module:my_spi_module
clk => ~NO_FANOUT~
rst_n => ~NO_FANOUT~
sclk => ~NO_FANOUT~
ss => ~NO_FANOUT~
mosi => ~NO_FANOUT~
miso <= <GND>
bit_count[0] <= <GND>
bit_count[1] <= <GND>
bit_count[2] <= <GND>
byte_count[0] <= <GND>
byte_count[1] <= <GND>
byte_count[2] <= <GND>
rx_data[0] <= <GND>
rx_data[1] <= <GND>
rx_data[2] <= <GND>
rx_data[3] <= <GND>
rx_data[4] <= <GND>
rx_data[5] <= <GND>
rx_data[6] <= <GND>
rx_data[7] <= <GND>
byte_received <= <GND>
data_transaction_complete <= <GND>


